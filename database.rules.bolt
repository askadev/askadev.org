path /allowedUsernames {
  read() { everyone() }
  write() { isSuperAdmin() }
}

type Region {
  displayName: String | Null
}

path /regions {
  read() { everyone() }
  write() { isSuperAdmin() }
}

path /regions/{regionId} is Region {}

type Skill {
  displayName: String | Null,
  uid: String
}

path /skills {
  read() { everyone() }
  write() { isAuthed() && this !== null && prior(this) === null }
}

path /skills/{skillId} is Skill {}

type Event {
  startTime: Number,
  endTime: Number,
  region: String,
  location: String,
  directions: String,
  createdBy: String,
  createdAt: Number
}

path /events {
  read() { everyone() }
}

path /events/{eventId} is Event {
  write() {
    isAuthed() &&
    (
      isSuperAdmin() ||
      this !== null && prior(this) === null ||
      auth.uid === prior(createdBy)
    )
  }
}

path /users/{userId} {
  read() { everyone() }
  write() { isUser(userId) || isSuperAdmin() }
}

path /superAdmins {
  read() { isAuthed() }
}

isUser(uid) { auth.uid === uid }
everyone() { auth.uid == null || auth != null }
isAuthed() { auth !== null }
isSuperAdmin() { root.superAdmins[auth.uid] !== null }

type TimeString extends String {
  validate() { this.length > 19 && this.length < 25 && this.test(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.?\d{3}?Z$/) }
}
